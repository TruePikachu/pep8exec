	; Program to compute squares for 0..255
	LDA	0,i		; A = 0
	STA	counter,d	; counter = 0
loop:	LDA	counter,d	; A = counter
	LDX	counter,d	; X = counter
	CALL	Multiply	; X:A = A*X
	DECO	counter,d	; CON <- counter
	STRO	delim,d		; CON <- "^2="
	LDX	counter,d	; CON <- A,'\n'
	STA	counter,d	; ...
	DECO	counter,d	; ...
	CHARO	'\n',i		; ...
	ADDX	1,i		; counter++
	STX	counter,d	; ...
	CPX	256,i		; Loop if counter!=256
	BRNE	loop		; ...
	STOP

counter:.WORD	0
delim:	.ASCII	"^2=\x00"

;;; PROCEDURE Multiply
;;; X:A <- A*X
Multiply:SUBSP	10,i
	STX	0,s	; 0:  WORD n1 = X
	LDX	0,i	; X = 0
	STX	2,s	; 2: DWORD n2 = 0:A
	STA	4,s	; ...
	STX	6,s	; 6: DWORD res = 0
	STX	8,s	; ...
Mloop:	LDX	0,s	; X = n1&1
	ANDX	1,i	; ...
	BREQ	MNoAdd	; Jump if bit is clear
	LDX	8,s	; res.L += n2,L
	ADDX	4,s	; ...
	STX	8,s	; ...
	BRC	MCar	; Jump if overflow
	LDX	6,s	; res.H += n2.H
	ADDX	2,s	; ...
	STX	6,s	; ...
	BR	MNoAdd	; Jump to merge
MCar:	LDX	6,s	; res.H += n2.H + 1
	ADDX	1,i	; ...
	ADDX	2,s	; ...
	STX	6,s	; ...
MNoAdd:	LDX	0,s	; n1 /= 2
	ASRX		; ...
	STX	0,s	; ...
	LDA	4,s	; X:A = n2
	LDX	2,s	; ...
	ASLX		; X<<=1
	ASLA		; A<<=1
	BRC	MSh1	; X++ if carry
	SUBX	1,i	; ...
MSh1:	ADDX	1,i	; ...
	STX	2,s	; n2 = X:A
	STA	4,s	; ...
	LDX	0,s	; X = n1
	BRNE	Mloop	; Loop if !=0
	LDX	6,s	; X:A = res
	LDA	8,s	; ...
	ADDSP	10,i
	RET0
;;; END PROCEDURE
	.END
